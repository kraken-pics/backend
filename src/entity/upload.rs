//! SeaORM Entity. Generated by sea-orm-codegen 0.9.0

use sea_orm::entity::prelude::*;
use serde::Serialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize)]
#[sea_orm(table_name = "upload")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub userid: i32,
    #[sea_orm(unique)]
    pub filemask: String,
    pub mimetype: String,
    pub hash: String,
    pub size: i32,
    pub createdat: DateTime,
    pub reported: i8,
}

#[derive(Copy, Clone, Debug, EnumIter)]
pub enum Relation {}

impl RelationTrait for Relation {
    fn def(&self) -> RelationDef {
        panic!("No RelationDef")
    }
}

impl ActiveModelBehavior for ActiveModel {}
