//! SeaORM Entity. Generated by sea-orm-codegen 0.9.0

use super::sea_orm_active_enums::Membership;
use super::sea_orm_active_enums::Role;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(unique)]
    pub username: String,
    #[sea_orm(unique)]
    pub email: String,
    pub password: String,
    pub isverified: i8,
    pub role: Role,
    pub membership: Membership,
    pub token: String,
    #[sea_orm(unique)]
    pub uploadtoken: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_one = "super::config::Entity")]
    Config,
}

impl Related<super::config::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Config.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
